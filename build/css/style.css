* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; }

.visually-hidden {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden; }

a {
  text-decoration: none; }

li {
  list-style: none; }

img {
  max-width: 100%; }

@media (max-width: 767px) {
  .appear {
    animation-name: appear;
    animation-duration: 0.5s;
    animation-fill-mode: forwards; }
  @keyframes appear {
    0% {
      transform: translateX(-1000px); }
    100% {
      transform: translateX(0px); } }
  .disappear {
    animation-name: disappear;
    animation-duration: 0.5s;
    animation-fill-mode: forwards; }
  @keyframes disappear {
    0% {
      transform: translateX(0); }
    100% {
      transform: translateX(-1000px); } }
  .goods-show {
    animation-name: goods-show;
    animation-duration: 0.5s;
    animation-fill-mode: forwards; }
  @keyframes goods-show {
    0% {
      transform: translateX(-100%); }
    100% {
      transform: translateX(0%); } }
  .goods-hide {
    animation-name: goods-hide;
    animation-duration: 0.5s;
    animation-fill-mode: forwards; } }

@keyframes goods-hide {
  0% {
    transform: translateX(0%); }
  100% {
    transform: translateX(-100%); } }

@media (max-width: 767px) {
  .isActive {
    display: block; } }

@media (min-width: 768px) {
  .isActive {
    display: none; } }

@media (min-width: 768px) {
  .wrapper {
    width: 100%;
    display: flex; } }

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@media (max-width: 767px) {
  .header {
    height: 10vh;
    position: relative;
    padding: 0 10px 0;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center; }
  .header__button {
    display: flex;
    width: 20px;
    height: 20px;
    cursor: pointer;
    padding: 0 4px 0;
    flex-direction: column;
    justify-content: space-between;
    border: none;
    outline: none;
    background-color: transparent; }
  .header__button-element {
    width: 20px;
    min-height: 2px;
    background-color: black;
    padding: 0;
    display: block;
    transition: all 0.5s; }
  .first-rotate {
    transform: translate(1px, 8px) rotate(45deg); }
  .second-rotate {
    transform: scale(0); }
  .third-rotate {
    transform: translate(1px, -9px) rotate(-45deg); }
  .header__basket,
  .header__likes,
  .header__logo,
  .header__phone {
    width: 35px;
    height: 35px;
    box-shadow: inset 0 0 1px 1px black; }
  .header__logo a {
    display: block; } }

@media (min-width: 768px) {
  .header {
    min-height: 197px;
    width: 1220px;
    padding: 0;
    display: flex;
    margin: auto;
    position: relative; }
  .header__basket,
  .header__likes,
  .header__logo,
  .header__phone,
  .header__button {
    display: none; } }

.header-BigLogo {
  min-height: inherit;
  display: none;
  margin-right: auto; }

@media (min-width: 768px) {
  .header-BigLogo {
    min-width: 280px;
    display: block;
    background-color: #f9f8f3; }
  .header-BigLogo__ref {
    display: block;
    width: 100%;
    height: 100%;
    position: relative; }
  .header-BigLogo__ref img {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%); } }

.header-customer {
  min-height: inherit;
  display: none;
  margin-left: auto; }

@media (min-width: 768px) {
  .header-customer {
    display: flex;
    width: 20.08197%;
    justify-content: space-between;
    flex-wrap: wrap;
    align-items: flex-start;
    font-family: 'PT Sans', sans-serif;
    padding: 20px 0 30px;
    margin-left: 10px; }
  .header-customer__button {
    display: block;
    width: 48%;
    color: #fff;
    font-size: 13px;
    font-weight: 600;
    min-height: 30px;
    border-radius: 5px;
    border: none;
    outline: none;
    margin: 0; }
  .header-customer__button--lightgreen {
    background-color: #71c73b; }
  .header-customer__button--darkgreen {
    background-color: #00a75f; }
  .header-customer__basket {
    min-height: 61px;
    width: 100%;
    background-color: #f3f1ef;
    align-self: flex-end;
    border-radius: 3px;
    line-height: 61px;
    text-align: center; } }

@media (max-width: 767px) {
  .navigation {
    position: absolute;
    width: 70%;
    height: 90vh;
    top: 10vh;
    left: 0;
    transform: translateX(-1000px); } }

@media (min-width: 768px) {
  .navigation {
    width: 100%;
    display: flex;
    justify-content: space-between;
    min-height: 197px;
    position: relative; } }

@media (max-width: 767px) {
  .navigation-menu {
    font-family: 'PT Sans', sans-serif;
    font-weight: normal;
    font-size: 15px; }
  .navigation-menu__item {
    padding-left: 3%; }
  .navigation-menu__item a {
    color: #56504c;
    line-height: 30px;
    cursor: pointer;
    display: block;
    margin-left: 5px; }
  .navigation-menu__item-trigger {
    display: flex;
    align-items: center;
    position: relative; }
  .navigation-menu__item-trigger:hover {
    background-color: lightgrey; } }

@media (min-width: 768px) {
  .navigation-menu {
    width: 100%;
    display: flex;
    justify-content: space-between;
    font-family: 'PT Sans', sans-serif;
    font-style: italic;
    order: -3; }
  .navigation-menu__item a {
    color: #ffbf24;
    font-size: 15px;
    text-decoration: underline; } }

@media (max-width: 767px) {
  .navigation-catalog {
    width: 100%;
    font-family: 'PT Sans', sans-serif; }
  .navigation-catalog__item {
    border-bottom: 1px solid #e2e0d3;
    min-height: 50px;
    text-align: left;
    padding-left: 60px; }
  .navigation-catalog__item a {
    color: #534e3d;
    font-size: 15px;
    border-bottom: 1px dashed #534e3d;
    line-height: 50px;
    position: relative; }
  .navigation-catalog__item a:before {
    content: " ";
    position: absolute;
    width: 40px;
    height: 40px;
    border: 1px solid black;
    left: -50px;
    top: 50%;
    transform: translateY(-50%); }
  .navigation-catalog__item:hover {
    background-color: #b8ad87; }
  .navigation-catalog__item:hover .navigation-catalog__ref {
    color: #fff;
    border-bottom: 1px dashed #fff; } }

@media (min-width: 768px) {
  .inner {
    display: block;
    position: absolute;
    left: -10px; }
  .navigation-catalog {
    width: 280px;
    font-family: 'PT Sans', sans-serif; }
  .navigation-catalog__item {
    min-height: 47px;
    min-width: inherit;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    background-color: #f9f8f3;
    padding-left: 60px; }
  .navigation-catalog__ref {
    font-size: 15px;
    color: #534e3d;
    border-bottom: 1px dashed #595959;
    position: relative; }
  .navigation-catalog__ref:before {
    content: " ";
    position: absolute;
    width: 36px;
    height: 26px;
    box-shadow: 0 0 1px 1px black;
    left: -49px; }
  .navigation-catalog__item:hover {
    background-color: #b8ad87; }
  .navigation-catalog__item:hover .navigation-catalog__ref {
    color: #fff;
    border-bottom: 1px dashed #fff; } }

@media (max-width: 767px) {
  .navigation-wrapper {
    height: inherit;
    width: 100%;
    position: relative;
    overflow-x: hidden;
    padding-top: 5px;
    background-color: white;
    box-shadow: inset 0 0 2px 1px black; }
  .inner {
    width: 100%;
    height: inherit;
    position: absolute;
    top: 0;
    transform: translateX(-100%);
    background-color: #f9f8f3; }
  .inner__container {
    width: 100%;
    min-height: 35px;
    background-color: #e7e5d9;
    display: flex;
    justify-content: center;
    align-items: center; } }

@media (min-width: 768px) {
  .navigation-wrapper {
    width: 53.68852%;
    min-height: inherit;
    padding: 15px 0 15px;
    display: flex;
    flex-direction: column;
    justify-content: space-around; }
  .inner {
    display: block;
    position: absolute;
    top: 197px;
    left: 0; }
  .inner__container {
    display: none; } }

@media (max-width: 767px) {
  .navigation-form {
    min-height: 40px;
    background-color: #ebe8e5;
    display: flex;
    align-items: center;
    justify-content: center; }
  .navigation-form label {
    width: 94%;
    height: 25px; }
  .navigation-form label input {
    display: block;
    width: 100%;
    padding: 0 10px 0 10px;
    height: inherit; } }

@media (min-width: 768px) {
  .navigation-form {
    width: 100%;
    height: 36px;
    background-color: #ebe8e5;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 5px 0; }
  .navigation-form label {
    width: 100%;
    height: 26px;
    box-shadow: inset 0 0 2px 2px black; }
  .navigation-form label input {
    display: block;
    width: inherit;
    height: inherit;
    border: 1px solid #ebe8e5;
    outline: none; } }

.navigation-services {
  font-family: 'PT Sans', sans-serif;
  width: 150px;
  min-height: 88px;
  margin-top: 15px;
  margin-left: 60px;
  display: flex;
  flex-direction: column;
  justify-content: space-between; }

.navigation-services__item {
  padding-right: 3px;
  min-height: 27px;
  position: relative;
  width: 150px; }

.navigation-services__item a:hover {
  color: #00a75f;
  background-color: #e8e7e6; }

.navigation-services__item a {
  display: block;
  width: 100%;
  height: 100%;
  font-size: 14px;
  line-height: 27px;
  font-weight: 700;
  text-transform: uppercase;
  color: #72c73b;
  text-align: left;
  background-color: #f3f1ef;
  padding-left: 10px; }

.navigation-services__item:before {
  content: " ";
  position: absolute;
  height: 27px;
  width: 30px;
  box-shadow: 0 0 1px 1px black;
  left: -30%; }

@media (min-width: 768px) {
  .navigation-services {
    width: 100%;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    margin: 0;
    padding: 0;
    min-height: auto;
    order: 1; } }

@media (max-width: 767px) {
  .main {
    min-height: 400px; } }

@media (min-width: 768px) {
  .main {
    width: 1220px;
    height: 565px;
    margin: auto;
    display: flex; } }

@media (min-width: 768px) {
  .main-content {
    width: 77.04918%;
    margin-left: 280px;
    min-height: 565px; } }

@media (max-width: 767px) {
  .navigation-contacts {
    display: none; } }

@media (min-width: 768px) {
  .navigation-contacts {
    width: 100%;
    display: flex;
    font-family: 'PT Sans', sans-serif;
    justify-content: space-between;
    align-items: center;
    order: -4; }
  .navigation-contacts a {
    font-size: 15px;
    color: #474338;
    font-weight: 600; }
  .navigation-contacts span {
    font-size: 13px;
    color: #595959; }
  .navigation-actions {
    display: flex; }
  .navigation-actions__item a {
    color: #bfbfbf;
    font-size: 13px; }
  .location__item span {
    font-size: 13px;
    color: #595959; }
  .location__item a {
    margin-left: 5px;
    font-size: 13px;
    font-weight: 600;
    color: #00a75f;
    border-bottom: 1px dashed #00a75f; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbHMvc2NhZm9sZGluZ3Muc2NzcyIsImdsb2JhbHMvbm9ybWFsaXplLnNjc3MiLCJzdHlsZS5jc3MiLCJibG9ja3MvaGVhZGVyLnNjc3MiLCJibG9ja3MvaGVhZGVyLUJpZ0xvZ28uc2NzcyIsImJsb2Nrcy9oZWFkZXItY3VzdG9tZXIuc2NzcyIsImJsb2Nrcy9uYXZpZ2F0aW9uLnNjc3MiLCJibG9ja3MvbmF2aWdhdGlvbi1tZW51LnNjc3MiLCJibG9ja3MvbmF2aWdhdGlvbi1jYXRhbG9nLnNjc3MiLCJibG9ja3MvbmF2aWdhdGlvbi13cmFwcGVyLnNjc3MiLCJibG9ja3MvbmF2aWdhdGlvbi1mb3JtLnNjc3MiLCJibG9ja3MvbmF2aWdhdGlvbi1zZXJ2aWNlcy5zY3NzIiwiYmxvY2tzL21haW4uc2NzcyIsImJsb2Nrcy9tYWluLWNvbnRlbnQuc2NzcyIsImJsb2Nrcy9uYXZpZ2F0aW9uLWNvbnRhY3RzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxTQUFRO0VBQ1IsVUFBUztFQUNULHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLDZCQUE2QjtFQUM3QiwyQkFBMkI7RUFBRSxhQUFBO0VBQzdCLDhCQUE4QjtFQUM5QixxQkFBb0I7RUFDcEIsb0JBQW1CO0VBQ25CLHNCQUFzQjtFQUN0QixxQkFBcUI7RUFDckIsZ0JBQWdCLEVBQUE7O0FBS2xCO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZUFBZSxFQUFBOztBQUdqQjtFQUNFO0lBQ0Usc0JBQXNCO0lBQ3RCLHdCQUF3QjtJQUN4Qiw2QkFBNkIsRUFBQTtFQUcvQjtJQUNFO01BQ0UsOEJBQThCLEVBQUE7SUFFaEM7TUFDRSwwQkFBMEIsRUFBQSxFQUFBO0VBSTlCO0lBQ0UseUJBQXlCO0lBQ3pCLHdCQUF3QjtJQUN4Qiw2QkFBNkIsRUFBQTtFQUcvQjtJQUNFO01BQ0Usd0JBQXdCLEVBQUE7SUFFMUI7TUFDRSw4QkFBOEIs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QTtFQUdWO0lBQ0UsZUFBZTtJQUNmLGNBQWE7SUFDYixnQkFBZ0IsRUFBQTtFQUdoQjtJQUNFLGVBQWU7SUFDZixjQUFhLEVBQUE7RUFHakI7SUFDRSxhQUFhLEVBQUE7RUFHZjtJQUNFLGNBQWE7SUFDYixlQUFlLEVBQUE7RUFHakI7SUFDRSxlQUFlO0lBQ2YsY0FBYSxFQUFBO0VBR2Y7SUFDRSxnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixjQUFhO0lBQ2IsaUNBQWdDLEVBQUEsRUFDakMiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKntcbiAgbWFyZ2luOjA7XG4gIHBhZGRpbmc6MDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnZpc3VhbGx5LWhpZGRlbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICBjbGlwOiByZWN0KDFweCAxcHggMXB4IDFweCk7IC8qIElFNiwgSUU3ICovXG4gIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbiAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjowICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMXB4ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxcHggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuXG5cbmF7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxubGl7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmltZ3tcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYXBwZWFyIHtcbiAgICBhbmltYXRpb24tbmFtZTogYXBwZWFyO1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgfVxuXG4gIEBrZXlmcmFtZXMgYXBwZWFyIHtcbiAgICAwJSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMDBweCk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDBweCk7XG4gICAgfVxuICB9XG5cbiAgLmRpc2FwcGVhciB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IGRpc2FwcGVhcjtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gIH1cblxuICBAa2V5ZnJhbWVzIGRpc2FwcGVhciB7XG4gICAgMCUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwMHB4KTtcbiAgICB9XG4gIH1cblxuXG4gIC5nb29kcy1zaG93IHtcbiAgICBhbmltYXRpb24tbmFtZTogZ29vZHMtc2hvdztcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gIH1cblxuICBAa2V5ZnJhbWVzIGdvb2RzLXNob3cge1xuICAgIDAlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcbiAgICB9XG4gIH1cblxuICAuZ29vZHMtaGlkZSB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IGdvb2RzLWhpZGU7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICB9XG5cbn1cblxuQGtleWZyYW1lcyBnb29kcy1oaWRlIHtcbiAgMCV7XG4gICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCUpO1xuICB9XG4gIDEwMCV7XG4gICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTEwMCUpO1xuICB9XG4gfVxuXG5AbWVkaWEobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaXNBY3RpdmV7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuQG1lZGlhKG1pbi13aWR0aDo3NjhweCl7XG4gIC5pc0FjdGl2ZXtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbkBtZWRpYShtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG59IiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn0iLCIqIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbi52aXN1YWxseS1oaWRkZW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgY2xpcDogcmVjdCgxcHggMXB4IDFweCAxcHgpO1xuICAvKiBJRTYsIElFNyAqL1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMXB4ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxcHggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbmxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5hcHBlYXIge1xuICAgIGFuaW1hdGlvbi1uYW1lOiBhcHBlYXI7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9XG4gIEBrZXlmcmFtZXMgYXBwZWFyIHtcbiAgICAwJSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMDBweCk7IH1cbiAgICAxMDAlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwcHgpOyB9IH1cbiAgLmRpc2FwcGVhciB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IGRpc2FwcGVhcjtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IH1cbiAgQGtleWZyYW1lcyBkaXNhcHBlYXIge1xuICAgIDAlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAgIDEwMCUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAwcHgpOyB9IH1cbiAgLmdvb2RzLXNob3cge1xuICAgIGFuaW1hdGlvbi1uYW1lOiBnb29kcy1zaG93O1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuICBAa2V5ZnJhbWVzIGdvb2RzLXNob3cge1xuICAgIDAlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IH1cbiAgICAxMDAlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7IH0gfVxuICAuZ29vZHMtaGlkZSB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IGdvb2RzLWhpZGU7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzO1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9IH1cblxuQGtleWZyYW1lcyBnb29kcy1oaWRlIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7IH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaXNBY3RpdmUge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5pc0FjdGl2ZSB7XG4gICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAud3JhcHBlciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDsgfSB9XG5cbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmhlYWRlciB7XG4gICAgaGVpZ2h0OiAxMHZoO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAwIDEwcHggMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLmhlYWRlcl9fYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogMCA0cHggMDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuICAuaGVhZGVyX19idXR0b24tZWxlbWVudCB7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgbWluLWhlaWdodDogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNXM7IH1cbiAgLmZpcnN0LXJvdGF0ZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMXB4LCA4cHgpIHJvdGF0ZSg0NWRlZyk7IH1cbiAgLnNlY29uZC1yb3RhdGUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7IH1cbiAgLnRoaXJkLXJvdGF0ZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMXB4LCAtOXB4KSByb3RhdGUoLTQ1ZGVnKTsgfVxuICAuaGVhZGVyX19iYXNrZXQsXG4gIC5oZWFkZXJfX2xpa2VzLFxuICAuaGVhZGVyX19sb2dvLFxuICAuaGVhZGVyX19waG9uZSB7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAxcHggMXB4IGJsYWNrOyB9XG4gIC5oZWFkZXJfX2xvZ28gYSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlciB7XG4gICAgbWluLWhlaWdodDogMTk3cHg7XG4gICAgd2lkdGg6IDEyMjBweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaGVhZGVyX19iYXNrZXQsXG4gIC5oZWFkZXJfX2xpa2VzLFxuICAuaGVhZGVyX19sb2dvLFxuICAuaGVhZGVyX19waG9uZSxcbiAgLmhlYWRlcl9fYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmhlYWRlci1CaWdMb2dvIHtcbiAgbWluLWhlaWdodDogaW5oZXJpdDtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyLUJpZ0xvZ28ge1xuICAgIG1pbi13aWR0aDogMjgwcHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjhmMzsgfVxuICAuaGVhZGVyLUJpZ0xvZ29fX3JlZiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaGVhZGVyLUJpZ0xvZ29fX3JlZiBpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7IH0gfVxuXG4uaGVhZGVyLWN1c3RvbWVyIHtcbiAgbWluLWhlaWdodDogaW5oZXJpdDtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXItY3VzdG9tZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDIwLjA4MTk3JTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGZvbnQtZmFtaWx5OiAnUFQgU2FucycsIHNhbnMtc2VyaWY7XG4gICAgcGFkZGluZzogMjBweCAwIDMwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cbiAgLmhlYWRlci1jdXN0b21lcl9fYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogNDglO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIG1pbi1oZWlnaHQ6IDMwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIG1hcmdpbjogMDsgfVxuICAuaGVhZGVyLWN1c3RvbWVyX19idXR0b24tLWxpZ2h0Z3JlZW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM3MWM3M2I7IH1cbiAgLmhlYWRlci1jdXN0b21lcl9fYnV0dG9uLS1kYXJrZ3JlZW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGE3NWY7IH1cbiAgLmhlYWRlci1jdXN0b21lcl9fYmFza2V0IHtcbiAgICBtaW4taGVpZ2h0OiA2MXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2YxZWY7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGxpbmUtaGVpZ2h0OiA2MXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAubmF2aWdhdGlvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiA3MCU7XG4gICAgaGVpZ2h0OiA5MHZoO1xuICAgIHRvcDogMTB2aDtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwMHB4KTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubmF2aWdhdGlvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgbWluLWhlaWdodDogMTk3cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5uYXZpZ2F0aW9uLW1lbnUge1xuICAgIGZvbnQtZmFtaWx5OiAnUFQgU2FucycsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDE1cHg7IH1cbiAgLm5hdmlnYXRpb24tbWVudV9faXRlbSB7XG4gICAgcGFkZGluZy1sZWZ0OiAzJTsgfVxuICAubmF2aWdhdGlvbi1tZW51X19pdGVtIGEge1xuICAgIGNvbG9yOiAjNTY1MDRjO1xuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tbGVmdDogNXB4OyB9XG4gIC5uYXZpZ2F0aW9uLW1lbnVfX2l0ZW0tdHJpZ2dlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubmF2aWdhdGlvbi1tZW51X19pdGVtLXRyaWdnZXI6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubmF2aWdhdGlvbi1tZW51IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmb250LWZhbWlseTogJ1BUIFNhbnMnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBvcmRlcjogLTM7IH1cbiAgLm5hdmlnYXRpb24tbWVudV9faXRlbSBhIHtcbiAgICBjb2xvcjogI2ZmYmYyNDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLm5hdmlnYXRpb24tY2F0YWxvZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1mYW1pbHk6ICdQVCBTYW5zJywgc2Fucy1zZXJpZjsgfVxuICAubmF2aWdhdGlvbi1jYXRhbG9nX19pdGVtIHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UyZTBkMztcbiAgICBtaW4taGVpZ2h0OiA1MHB4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZy1sZWZ0OiA2MHB4OyB9XG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2dfX2l0ZW0gYSB7XG4gICAgY29sb3I6ICM1MzRlM2Q7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgIzUzNGUzZDtcbiAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLm5hdmlnYXRpb24tY2F0YWxvZ19faXRlbSBhOmJlZm9yZSB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICBsZWZ0OiAtNTBweDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgLm5hdmlnYXRpb24tY2F0YWxvZ19faXRlbTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2I4YWQ4NzsgfVxuICAubmF2aWdhdGlvbi1jYXRhbG9nX19pdGVtOmhvdmVyIC5uYXZpZ2F0aW9uLWNhdGFsb2dfX3JlZiB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjZmZmOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5pbm5lciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC0xMHB4OyB9XG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2cge1xuICAgIHdpZHRoOiAyODBweDtcbiAgICBmb250LWZhbWlseTogJ1BUIFNhbnMnLCBzYW5zLXNlcmlmOyB9XG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2dfX2l0ZW0ge1xuICAgIG1pbi1oZWlnaHQ6IDQ3cHg7XG4gICAgbWluLXdpZHRoOiBpbmhlcml0O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjhmMztcbiAgICBwYWRkaW5nLWxlZnQ6IDYwcHg7IH1cbiAgLm5hdmlnYXRpb24tY2F0YWxvZ19fcmVmIHtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgY29sb3I6ICM1MzRlM2Q7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjNTk1OTU5O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubmF2aWdhdGlvbi1jYXRhbG9nX19yZWY6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDM2cHg7XG4gICAgaGVpZ2h0OiAyNnB4O1xuICAgIGJveC1zaGFkb3c6IDAgMCAxcHggMXB4IGJsYWNrO1xuICAgIGxlZnQ6IC00OXB4OyB9XG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2dfX2l0ZW06aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiOGFkODc7IH1cbiAgLm5hdmlnYXRpb24tY2F0YWxvZ19faXRlbTpob3ZlciAubmF2aWdhdGlvbi1jYXRhbG9nX19yZWYge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2ZmZjsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAubmF2aWdhdGlvbi13cmFwcGVyIHtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAycHggMXB4IGJsYWNrOyB9XG4gIC5pbm5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOGYzOyB9XG4gIC5pbm5lcl9fY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiAzNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlN2U1ZDk7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5uYXZpZ2F0aW9uLXdyYXBwZXIge1xuICAgIHdpZHRoOiA1My42ODg1MiU7XG4gICAgbWluLWhlaWdodDogaW5oZXJpdDtcbiAgICBwYWRkaW5nOiAxNXB4IDAgMTVweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7IH1cbiAgLmlubmVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxOTdweDtcbiAgICBsZWZ0OiAwOyB9XG4gIC5pbm5lcl9fY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5uYXZpZ2F0aW9uLWZvcm0ge1xuICAgIG1pbi1oZWlnaHQ6IDQwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ViZThlNTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLm5hdmlnYXRpb24tZm9ybSBsYWJlbCB7XG4gICAgd2lkdGg6IDk0JTtcbiAgICBoZWlnaHQ6IDI1cHg7IH1cbiAgLm5hdmlnYXRpb24tZm9ybSBsYWJlbCBpbnB1dCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMCAxMHB4IDAgMTBweDtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm5hdmlnYXRpb24tZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmU4ZTU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBhZGRpbmc6IDAgNXB4IDA7IH1cbiAgLm5hdmlnYXRpb24tZm9ybSBsYWJlbCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyNnB4O1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAycHggMnB4IGJsYWNrOyB9XG4gIC5uYXZpZ2F0aW9uLWZvcm0gbGFiZWwgaW5wdXQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiBpbmhlcml0O1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZWJlOGU1O1xuICAgIG91dGxpbmU6IG5vbmU7IH0gfVxuXG4ubmF2aWdhdGlvbi1zZXJ2aWNlcyB7XG4gIGZvbnQtZmFtaWx5OiAnUFQgU2FucycsIHNhbnMtc2VyaWY7XG4gIHdpZHRoOiAxNTBweDtcbiAgbWluLWhlaWdodDogODhweDtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgbWFyZ2luLWxlZnQ6IDYwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG4ubmF2aWdhdGlvbi1zZXJ2aWNlc19faXRlbSB7XG4gIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgbWluLWhlaWdodDogMjdweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTUwcHg7IH1cblxuLm5hdmlnYXRpb24tc2VydmljZXNfX2l0ZW0gYTpob3ZlciB7XG4gIGNvbG9yOiAjMDBhNzVmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlN2U2OyB9XG5cbi5uYXZpZ2F0aW9uLXNlcnZpY2VzX19pdGVtIGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMjdweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICM3MmM3M2I7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmM2YxZWY7XG4gIHBhZGRpbmctbGVmdDogMTBweDsgfVxuXG4ubmF2aWdhdGlvbi1zZXJ2aWNlc19faXRlbTpiZWZvcmUge1xuICBjb250ZW50OiBcIiBcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDI3cHg7XG4gIHdpZHRoOiAzMHB4O1xuICBib3gtc2hhZG93OiAwIDAgMXB4IDFweCBibGFjaztcbiAgbGVmdDogLTMwJTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm5hdmlnYXRpb24tc2VydmljZXMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBtaW4taGVpZ2h0OiBhdXRvO1xuICAgIG9yZGVyOiAxOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5tYWluIHtcbiAgICBtaW4taGVpZ2h0OiA0MDBweDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWFpbiB7XG4gICAgd2lkdGg6IDEyMjBweDtcbiAgICBoZWlnaHQ6IDU2NXB4O1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tYWluLWNvbnRlbnQge1xuICAgIHdpZHRoOiA3Ny4wNDkxOCU7XG4gICAgbWFyZ2luLWxlZnQ6IDI4MHB4O1xuICAgIG1pbi1oZWlnaHQ6IDU2NXB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5uYXZpZ2F0aW9uLWNvbnRhY3RzIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5uYXZpZ2F0aW9uLWNvbnRhY3RzIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZvbnQtZmFtaWx5OiAnUFQgU2FucycsIHNhbnMtc2VyaWY7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgb3JkZXI6IC00OyB9XG4gIC5uYXZpZ2F0aW9uLWNvbnRhY3RzIGEge1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBjb2xvcjogIzQ3NDMzODtcbiAgICBmb250LXdlaWdodDogNjAwOyB9XG4gIC5uYXZpZ2F0aW9uLWNvbnRhY3RzIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBjb2xvcjogIzU5NTk1OTsgfVxuICAubmF2aWdhdGlvbi1hY3Rpb25zIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5uYXZpZ2F0aW9uLWFjdGlvbnNfX2l0ZW0gYSB7XG4gICAgY29sb3I6ICNiZmJmYmY7XG4gICAgZm9udC1zaXplOiAxM3B4OyB9XG4gIC5sb2NhdGlvbl9faXRlbSBzcGFuIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgY29sb3I6ICM1OTU5NTk7IH1cbiAgLmxvY2F0aW9uX19pdGVtIGEge1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgY29sb3I6ICMwMGE3NWY7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjMDBhNzVmOyB9IH1cbiIsIlxyXG5AbWVkaWEgKG1heC13aWR0aDo3NjdweCkge1xyXG4gIC5oZWFkZXIge1xyXG4gICAgaGVpZ2h0OiAxMHZoO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZzogMCAxMHB4IDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAuaGVhZGVyX19idXR0b24ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAyMHB4O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMCA0cHggMDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5cclxuXHJcbiAgLmhlYWRlcl9fYnV0dG9uLWVsZW1lbnQge1xyXG4gICAgd2lkdGg6IDIwcHg7XHJcbiAgICBtaW4taGVpZ2h0OiAycHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjVzO1xyXG4gIH1cclxuXHJcbiAgLmZpcnN0LXJvdGF0ZSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIDhweCkgcm90YXRlKDQ1ZGVnKTtcclxuICB9XHJcblxyXG4gIC5zZWNvbmQtcm90YXRle1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuICB9XHJcblxyXG4gIC50aGlyZC1yb3RhdGV7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIC05cHgpIHJvdGF0ZSgtNDVkZWcpO1xyXG4gIH1cclxuXHJcblxyXG4gIC8vLmhlYWRlcl9fYnV0dG9uOmhvdmVyIC5oZWFkZXJfX2J1dHRvbi1lbGVtZW50Om50aC1jaGlsZCgxKSB7XHJcbiAgLy8gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgOHB4KSByb3RhdGUoNDVkZWcpO1xyXG4gIC8vfVxyXG4gIC8vXHJcbiAgLy8uaGVhZGVyX19idXR0b246aG92ZXIgLmhlYWRlcl9fYnV0dG9uLWVsZW1lbnQ6bnRoLWNoaWxkKDIpIHtcclxuICAvLyAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuICAvL31cclxuICAvL1xyXG4gIC8vLmhlYWRlcl9fYnV0dG9uOmhvdmVyIC5oZWFkZXJfX2J1dHRvbi1lbGVtZW50Om50aC1jaGlsZCgzKSB7XHJcbiAgLy8gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgLTlweCkgcm90YXRlKC00NWRlZyk7XHJcbiAgLy99XHJcblxyXG4gIC5oZWFkZXJfX2Jhc2tldCxcclxuICAuaGVhZGVyX19saWtlcyxcclxuICAuaGVhZGVyX19sb2dvLFxyXG4gIC5oZWFkZXJfX3Bob25lIHtcclxuICAgIHdpZHRoOiAzNXB4O1xyXG4gICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDFweCAxcHggYmxhY2s7XHJcbiAgICAvL2JvcmRlci1yYWRpdXM6IDUwJTtcclxuICB9XHJcblxyXG5cclxuICAuaGVhZGVyX19sb2dvIGEge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG5cclxuICAvLy5oZWFkZXJfX2xpa2VzIHtcclxuICAvLyAgd2lkdGg6IDMwcHg7XHJcbiAgLy8gIGhlaWdodDogMzBweDtcclxuICAvLyAgYm94LXNoYWRvdzogMCAwIDFweCAxcHggYmxhY2s7XHJcbiAgLy8gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAvL31cclxuXHJcbiAgLy8uaGVhZGVyX19iYXNrZXQge1xyXG4gIC8vICB3aWR0aDogMzBweDtcclxuICAvLyAgaGVpZ2h0OiAzMHB4O1xyXG4gIC8vICBib3gtc2hhZG93OiAwIDAgMXB4IDFweCBibGFjaztcclxuICAvLyAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIC8vfVxyXG59XHJcblxyXG5AbWVkaWEobWluLXdpZHRoOjc2OHB4KXtcclxuICAuaGVhZGVye1xyXG4gICAgbWluLWhlaWdodDogMTk3cHg7XHJcbiAgICB3aWR0aDogMTIyMHB4O1xyXG4gICAgcGFkZGluZzowO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC8vYm94LXNoYWRvdzogMCAwIDJweCAycHggcmVkO1xyXG4gIH1cclxuXHJcbiAgLmhlYWRlcl9fYmFza2V0LFxyXG4gIC5oZWFkZXJfX2xpa2VzLFxyXG4gIC5oZWFkZXJfX2xvZ28sXHJcbiAgLmhlYWRlcl9fcGhvbmUsXHJcbiAgLmhlYWRlcl9fYnV0dG9ue1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcblxyXG5cclxufSIsIi5oZWFkZXItQmlnTG9nb3tcclxuICAvL3dpZHRoOjI4MHB4O1xyXG4gIG1pbi1oZWlnaHQ6IGluaGVyaXQ7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcblxyXG5AbWVkaWEobWluLXdpZHRoOiA3NjhweCl7XHJcbiAgLmhlYWRlci1CaWdMb2dvIHtcclxuICAgIG1pbi13aWR0aDoyODBweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgLy9ib3gtc2hhZG93OiAgMCAwIDEwcHggMTBweCBsaWdodGdyZXk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOGYzO1xyXG4gICAgLy9wb3NpdGlvbjphYnNvbHV0ZTtcclxuICB9XHJcblxyXG4gIC5oZWFkZXItQmlnTG9nb19fcmVme1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB9XHJcblxyXG4gIC5oZWFkZXItQmlnTG9nb19fcmVmIGltZ3tcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6NTAlO1xyXG4gICAgdG9wOjUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xyXG4gIH1cclxuXHJcbn0iLCIuaGVhZGVyLWN1c3RvbWVye1xyXG4gICAgLy9taW4td2lkdGg6IDI0NXB4O1xyXG4gICAgbWluLWhlaWdodDogaW5oZXJpdDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBtYXJnaW4tbGVmdDphdXRvO1xyXG59XHJcblxyXG5cclxuQG1lZGlhKG1pbi13aWR0aDogNzY4cHgpe1xyXG4gIC5oZWFkZXItY3VzdG9tZXJ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLy9ib3gtc2hhZG93OiBpbnNldCAwIDAgMXB4IDFweCBibGFjaztcclxuICAgIHdpZHRoOjI0NS8xMjIwICogMTAwJTtcclxuICAgIC8vbWF4LXdpZHRoOiAyNDVweDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgZm9udC1mYW1pbHk6ICdQVCBTYW5zJywgc2Fucy1zZXJpZjtcclxuICAgIC8vYm94LXNoYWRvdzogaW5zZXQgMCAwIDJweCAycHggcmVkO1xyXG4gICAgcGFkZGluZzogMjBweCAwIDMwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICB9XHJcblxyXG4gIC5oZWFkZXItY3VzdG9tZXJfX2J1dHRvbntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6NDglO1xyXG4gICAgY29sb3I6I2ZmZjtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBtaW4taGVpZ2h0OiAzMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czo1cHg7XHJcbiAgICBib3JkZXI6bm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBtYXJnaW46MDtcclxuICB9XHJcblxyXG4gIC5oZWFkZXItY3VzdG9tZXJfX2J1dHRvbi0tbGlnaHRncmVlbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzcxYzczYjtcclxuICB9XHJcblxyXG4gIC5oZWFkZXItY3VzdG9tZXJfX2J1dHRvbi0tZGFya2dyZWVue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYTc1ZjtcclxuICB9XHJcblxyXG4gIC5oZWFkZXItY3VzdG9tZXJfX2Jhc2tldHtcclxuICAgIG1pbi1oZWlnaHQ6IDYxcHg7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojZjNmMWVmO1xyXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICBib3JkZXItcmFkaXVzOjNweDtcclxuICAgIGxpbmUtaGVpZ2h0OiA2MXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcblxyXG5cclxuIiwiQG1lZGlhKG1heC13aWR0aDogNzY3cHgpe1xyXG4gIC5uYXZpZ2F0aW9uIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBoZWlnaHQ6IDkwdmg7XHJcbiAgICB0b3A6IDEwdmg7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAwcHgpO1xyXG4gICAgLy9ib3gtc2hhZG93OiAwIDAgMXB4IDFweCByZWQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEobWluLXdpZHRoOjc2OHB4KXtcclxuICAubmF2aWdhdGlvbntcclxuICAgIHdpZHRoOjEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgbWluLWhlaWdodDoxOTdweDtcclxuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG4gICAgLy9ib3gtc2hhZG93OiAwIDAgMnB4IDJweCBvcmFuZ2U7XHJcbiAgfVxyXG59XHJcbiIsIkBtZWRpYShtYXgtd2lkdGg6IDc2N3B4KSB7XHJcbiAgLm5hdmlnYXRpb24tbWVudSB7XHJcbiAgICBmb250LWZhbWlseTogJ1BUIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICB9XHJcblxyXG4gIC5uYXZpZ2F0aW9uLW1lbnVfX2l0ZW0ge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAzJTtcclxuICB9XHJcblxyXG4gIC5uYXZpZ2F0aW9uLW1lbnVfX2l0ZW0gYSB7XHJcbiAgICBjb2xvcjogIzU2NTA0YztcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gIH1cclxuXHJcbiAgLm5hdmlnYXRpb24tbWVudV9faXRlbS10cmlnZ2VyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgLm5hdmlnYXRpb24tbWVudV9faXRlbS10cmlnZ2VyOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmV5O1xyXG4gIH1cclxuXHJcblxyXG5cclxuICAvLy52ZWN0b3Ige1xyXG4gIC8vICB3aWR0aDogOHB4O1xyXG4gIC8vICBoZWlnaHQ6IDhweDtcclxuICAvLyAgYm94LXNoYWRvdzogMCAwIDFweCAxcHggYmxhY2s7XHJcbiAgLy8gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIC8vICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIC8vICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAvL31cclxuICAvL1xyXG4gIC8vLnZlY3RvciBzcGFuIHtcclxuICAvLyAgZGlzcGxheTogYmxvY2s7XHJcbiAgLy8gIHdpZHRoOiA4cHg7XHJcbiAgLy8gIGhlaWdodDogMXB4O1xyXG4gIC8vICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAvL31cclxuICAvL1xyXG4gIC8vLnZlY3RvciBzcGFuOm50aC1jaGlsZCgxKSB7XHJcbiAgLy8gIHRyYW5zZm9ybTogcm90YXRlKDI1ZGVnKTtcclxuICAvL31cclxuICAvL1xyXG4gIC8vLnZlY3RvciBzcGFuOm50aC1jaGlsZCgyKSB7XHJcbiAgLy8gIHRyYW5zZm9ybTogcm90YXRlKC0yNWRlZyk7XHJcbiAgLy99XHJcblxyXG59XHJcblxyXG5AbWVkaWEobWluLXdpZHRoOiA3NjhweCl7XHJcbiAgLm5hdmlnYXRpb24tbWVudXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgZm9udC1mYW1pbHk6ICdQVCBTYW5zJywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIC8vYm94LXNoYWRvdzogaW5zZXQgMCAwIDFweCAxcHggcmVkO1xyXG4gICAgb3JkZXI6LTM7XHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1tZW51X19pdGVtIGF7XHJcbiAgICBjb2xvcjojZmZiZjI0O1xyXG4gICAgZm9udC1zaXplOjE1cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICB9XHJcblxyXG59IiwiQG1lZGlhKG1heC13aWR0aDo3NjdweCkge1xyXG5cclxuICAubmF2aWdhdGlvbi1jYXRhbG9nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdQVCBTYW5zJywgc2Fucy1zZXJpZjtcclxuICB9XHJcblxyXG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2dfX2l0ZW0ge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMmUwZDM7XHJcbiAgICBtaW4taGVpZ2h0OiA1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHBhZGRpbmctbGVmdDogNjBweDtcclxuXHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1jYXRhbG9nX19pdGVtIGEge1xyXG4gICAgY29sb3I6ICM1MzRlM2Q7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggZGFzaGVkICM1MzRlM2Q7XHJcbiAgICBsaW5lLWhlaWdodDogNTBweDtcclxuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgLm5hdmlnYXRpb24tY2F0YWxvZ19faXRlbSBhOmJlZm9yZXtcclxuICAgIGNvbnRlbnQ6IFwiIFwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBib3JkZXI6MXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgbGVmdDotNTBweDtcclxuICAgIHRvcDo1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1jYXRhbG9nX19pdGVtOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2I4YWQ4NztcclxuICB9XHJcblxyXG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2dfX2l0ZW06aG92ZXIgLm5hdmlnYXRpb24tY2F0YWxvZ19fcmVme1xyXG4gICAgY29sb3I6I2ZmZjtcclxuICAgIGJvcmRlci1ib3R0b206MXB4IGRhc2hlZCAjZmZmO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbkBtZWRpYShtaW4td2lkdGg6IDc2OHB4KXtcclxuICAuaW5uZXJ7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vdG9wOjE5M3B4O1xyXG4gICAgbGVmdDotMTBweDtcclxuICB9XHJcblxyXG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2d7XHJcbiAgICB3aWR0aDogMjgwcHg7XHJcbiAgICBmb250LWZhbWlseTogJ1BUIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgLy9ib3gtc2hhZG93OiAwIDAgMnB4IDJweCBsaWdodGdyZXk7XHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1jYXRhbG9nX19pdGVte1xyXG4gICAgbWluLWhlaWdodDogNDdweDtcclxuICAgIG1pbi13aWR0aDogaW5oZXJpdDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjhmMztcclxuICAgIHBhZGRpbmctbGVmdDogNjBweDtcclxuXHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1jYXRhbG9nX19yZWZ7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBjb2xvcjojNTM0ZTNkO1xyXG4gICAgYm9yZGVyLWJvdHRvbToxcHggZGFzaGVkICM1OTU5NTk7XHJcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICB9XHJcblxyXG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2dfX3JlZjpiZWZvcmV7XHJcbiAgICBjb250ZW50OiBcIiBcIjtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgd2lkdGg6IDM2cHg7XHJcbiAgICBoZWlnaHQ6IDI2cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMXB4IDFweCBibGFjaztcclxuICAgIGxlZnQ6LTQ5cHg7XHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1jYXRhbG9nX19pdGVtOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2I4YWQ4NztcclxuICB9XHJcblxyXG4gIC5uYXZpZ2F0aW9uLWNhdGFsb2dfX2l0ZW06aG92ZXIgLm5hdmlnYXRpb24tY2F0YWxvZ19fcmVme1xyXG4gICAgY29sb3I6I2ZmZjtcclxuICAgIGJvcmRlci1ib3R0b206MXB4IGRhc2hlZCAjZmZmO1xyXG4gIH1cclxuXHJcblxyXG59IiwiQG1lZGlhKG1heC13aWR0aDogNzY3cHgpIHtcclxuICAubmF2aWdhdGlvbi13cmFwcGVyIHtcclxuICAgIGhlaWdodDogaW5oZXJpdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgLy9vdmVyZmxvdy15OiBoaWRkZW47XHJcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xyXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDJweCAxcHggYmxhY2s7XHJcbiAgfVxyXG5cclxuICAuaW5uZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjhmMztcclxuICAgIC8vYm94LXNoYWRvdzogMCAwIDFweCAxcHggYmxhY2s7XHJcbiAgfVxyXG5cclxuXHJcbiAgLmlubmVyX19jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAzNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTVkOTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuQG1lZGlhKG1pbi13aWR0aDogNzY4cHgpe1xyXG4gIC5uYXZpZ2F0aW9uLXdyYXBwZXJ7XHJcbiAgICAvL3dpZHRoOjYzNS85MzUgKiAxMDAlO1xyXG4gICAgd2lkdGg6IDY1NS8xMjIwICogMTAwJTtcclxuICAgIG1pbi1oZWlnaHQ6IGluaGVyaXQ7XHJcbiAgIHBhZGRpbmc6IDE1cHggMCAxNXB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgIC8vYm94LXNoYWRvdzogaW5zZXQgMCAwIDFweCAxcHggbGlnaHRzZWFncmVlbjtcclxuICB9XHJcblxyXG4gIC5pbm5lcntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOjE5N3B4O1xyXG4gICAgbGVmdDowO1xyXG4gIH1cclxuXHJcbiAgLmlubmVyX19jb250YWluZXJ7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuXHJcbn0iLCJAbWVkaWEobWF4LXdpZHRoOiA3NjdweCkge1xyXG4gIC5uYXZpZ2F0aW9uLWZvcm0ge1xyXG4gICAgbWluLWhlaWdodDogNDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmU4ZTU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuICAubmF2aWdhdGlvbi1mb3JtIGxhYmVsIHtcclxuICAgIHdpZHRoOiA5NCU7XHJcbiAgICAvL21pbi1oZWlnaHQ6IDM1cHg7XHJcbiAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1mb3JtIGxhYmVsIGlucHV0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwIDEwcHggMCAxMHB4O1xyXG4gICAgaGVpZ2h0OiBpbmhlcml0O1xyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhKG1pbi13aWR0aDogNzY4cHgpe1xyXG4gIC5uYXZpZ2F0aW9uLWZvcm17XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMzZweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmU4ZTU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMCA1cHggMDtcclxuICB9XHJcbiAgLm5hdmlnYXRpb24tZm9ybSBsYWJlbHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAyNnB4O1xyXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDJweCAycHggYmxhY2s7XHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1mb3JtIGxhYmVsIGlucHV0e1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogaW5oZXJpdDtcclxuICAgIGhlaWdodDogaW5oZXJpdDtcclxuICAgIGJvcmRlcjoxcHggc29saWQgI2ViZThlNTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgfVxyXG5cclxufSIsIi5uYXZpZ2F0aW9uLXNlcnZpY2Vze1xyXG4gIGZvbnQtZmFtaWx5OiAnUFQgU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgd2lkdGg6IDE1MHB4O1xyXG4gIG1pbi1oZWlnaHQ6IDg4cHg7XHJcbiAgbWFyZ2luLXRvcDogMTVweDtcclxuICBtYXJnaW4tbGVmdDogNjBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG5cclxuLm5hdmlnYXRpb24tc2VydmljZXNfX2l0ZW17XHJcbiAgcGFkZGluZy1yaWdodDogM3B4O1xyXG4gIG1pbi1oZWlnaHQ6MjdweDtcclxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICB3aWR0aDogMTUwcHg7XHJcbn1cclxuXHJcbi5uYXZpZ2F0aW9uLXNlcnZpY2VzX19pdGVtIGE6aG92ZXJ7XHJcbiAgY29sb3I6ICMwMGE3NWY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZTdlNlxyXG59XHJcblxyXG5cclxuLm5hdmlnYXRpb24tc2VydmljZXNfX2l0ZW0gYXtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyN3B4O1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBjb2xvcjojNzJjNzNiO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjojZjNmMWVmO1xyXG4gIHBhZGRpbmctbGVmdDogMTBweDtcclxufVxyXG5cclxuLm5hdmlnYXRpb24tc2VydmljZXNfX2l0ZW06YmVmb3Jle1xyXG4gIGNvbnRlbnQ6IFwiIFwiO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6MjdweDtcclxuICB3aWR0aDozMHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxcHggMXB4IGJsYWNrO1xyXG4gIGxlZnQ6LTMwJTtcclxufVxyXG5cclxuXHJcblxyXG5AbWVkaWEobWluLXdpZHRoOiA3NjhweCl7XHJcbiAgLm5hdmlnYXRpb24tc2VydmljZXN7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAvL2JveC1zaGFkb3c6IDAgMCAxcHggMXB4IG9yYW5nZTtcclxuICAgIG1hcmdpbjowO1xyXG4gICAgcGFkZGluZzowO1xyXG4gICAgbWluLWhlaWdodDogYXV0bztcclxuICAgIG9yZGVyOjE7XHJcbiAgfVxyXG59IiwiQG1lZGlhKG1heC13aWR0aDogNzY3cHgpIHtcclxuICAubWFpbiB7XHJcbiAgICBtaW4taGVpZ2h0OiA0MDBweDtcclxuICAgIC8vYm94LXNoYWRvdzogMCAwIDJweCAycHggYmxhY2s7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEobWluLXdpZHRoOjc2OHB4KSB7XHJcbiAgLm1haW4ge1xyXG4gICAgd2lkdGg6IDEyMjBweDtcclxuICAgIGhlaWdodDogNTY1cHg7XHJcbiAgICAvL2JveC1zaGFkb3c6IDAgMCAycHggMnB4IGJsYWNrO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xyXG4gIH1cclxufSIsIkBtZWRpYShtaW4td2lkdGg6IDc2OHB4KXtcclxuICAubWFpbi1jb250ZW50e1xyXG4gICAgd2lkdGg6OTQwLzEyMjAqMTAwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAyODBweDtcclxuICAgIG1pbi1oZWlnaHQ6IDU2NXB4O1xyXG4gICAgLy9iYWNrZ3JvdW5kOiB1cmwoJy4uLy4uLy4uL2J1aWxkL2ltZy9maXJzdC1iYW5uZXIuanBnJyk7XHJcbiAgICAvL2JhY2tncm91bmQtc2l6ZToxMDAlIDEwMCU7XHJcbiAgfVxyXG59IiwiQG1lZGlhKG1heC13aWR0aDogNzY3cHgpe1xyXG4gIC5uYXZpZ2F0aW9uLWNvbnRhY3RzIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIC5uYXZpZ2F0aW9uLWNvbnRhY3RzIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZvbnQtZmFtaWx5OiAnUFQgU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgb3JkZXI6LTQ7XHJcbiAgfVxyXG5cclxuICAubmF2aWdhdGlvbi1jb250YWN0cyBhe1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgY29sb3I6IzQ3NDMzODtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgfVxyXG5cclxuICAgIC5uYXZpZ2F0aW9uLWNvbnRhY3RzIHNwYW57XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgY29sb3I6IzU5NTk1OTtcclxuICAgIH1cclxuXHJcbiAgLm5hdmlnYXRpb24tYWN0aW9ucyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuXHJcbiAgLm5hdmlnYXRpb24tYWN0aW9uc19faXRlbSBhIHtcclxuICAgIGNvbG9yOiNiZmJmYmY7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgfVxyXG5cclxuICAubG9jYXRpb25fX2l0ZW0gc3BhbntcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGNvbG9yOiM1OTU5NTk7XHJcbiAgfVxyXG5cclxuICAubG9jYXRpb25fX2l0ZW0gYXtcclxuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgY29sb3I6IzAwYTc1ZjtcclxuICAgIGJvcmRlci1ib3R0b206MXB4IGRhc2hlZCAjMDBhNzVmO1xyXG4gIH1cclxuXHJcbn0iXX0= */
